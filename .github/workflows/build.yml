name: "Build and publish üè≠"

on:
  workflow_call:
    # secrets: inherit
  push:
    tags:
      - "*"
    branches:
      - main
      - build-*

env:
  GHCR_IMAGE: "ghcr.io/${{ github.repository }}"

jobs:
  bundle:
    name: Build Meteor Bundle üì¶
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v3

      - name: Define metadata
        id: meta
        run: |
          METEOR=$(cat .meteor/release | awk -F'@' '{print $2}')
          echo ::set-output name=meteor::${METEOR}

          VERSION=$(cat package.json | jq -r '.version')
          echo ::set-output name=version::${VERSION}

          HASH="${GITHUB_SHA}"
          echo ::set-output name=tag::${HASH}

          BUNDLE=${{ github.event.repository.name }}-${HASH}.tar.gz
          echo ::set-output name=bundle::${BUNDLE}

          META=$( jq -n \
            --arg meteor ${METEOR} \
            --arg version ${VERSION} \
            --arg hash ${HASH} \
            --arg bundle ${BUNDLE} \
            '{"meteor": $meteor, "version": $version, "hash": $hash, "bundle": $bundle}'
          )
          echo ${META} > meta.json

      - uses: meteorengineer/setup-meteor@v1
        with:
          meteor-release: ${{ steps.meta.outputs.meteor }}

      - run: meteor npm install
      - run: meteor build .
      - name: Rename bundle
        run: |
          mv ${{ github.event.repository.name }}.tar.gz ${{ steps.meta.outputs.bundle }}

      - name: Upload Artifacts
        uses: actions/upload-artifact@v3
        with:
          name: artifacts
          path: |
            meta.json
            ${{ steps.meta.outputs.bundle }}
            .dockerignore
            Dockerfile
            docker-compose.yaml
            .env.mongo.template
            .env.recorder.template
            meteor-recorder.service
            README.md
            LICENSE
          if-no-files-found: error

  docker:
    name: Build Docker Image üê≥
    runs-on: ubuntu-20.04
    needs: [bundle]
    steps:
      - uses: actions/download-artifact@v3
        with:
          name: artifacts

      - name: Define metadata
        id: meta
        run: |
          VERSION=$(cat meta.json | jq -r '.version')
          BUNDLE=$(cat meta.json | jq -r '.bundle')
          echo ::set-output name=bundle::${BUNDLE}

          HASH=$(cat meta.json | jq -r '.hash')

          TAGS="${{ env.GHCR_IMAGE }}:${HASH},${{ env.GHCR_IMAGE }}:${GITHUB_REF_NAME}"
          if [[ $GITHUB_REF == refs/heads/main ]]; then
            TAGS="${TAGS},${{ env.GHCR_IMAGE }}:${VERSION}"
          fi
          echo ::set-output name=tags::${TAGS}

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GHCR_TOKEN_RW }}

      - uses: docker/setup-qemu-action@v2
      - uses: docker/setup-buildx-action@v2
      - uses: docker/build-push-action@v3
        with:
          context: .
          build-args: |
            BUNDLE=${{ steps.meta.outputs.bundle }}
          platforms: linux/amd64, linux/arm64
          tags: ${{ steps.meta.outputs.tags }}
          push: true
