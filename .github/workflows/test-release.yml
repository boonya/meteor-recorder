name: "[Test] Build and release meteor bundle üì¶ and Docker Image üê≥"

on: [push]

jobs:
  build:
    name: Build JavaScript bundle üì¶
    runs-on: ubuntu-20.04
    # strategy:
    #   matrix:
    #     platform: [linux/amd64, linux/arm64]
    steps:
      - uses: actions/checkout@v3
      - name: Define versions
        id: versions
        run: |
          BUNDLE=$(cat package.json | jq '.version')
          NODE=$(cat package.json | jq '.engines.node')
          NPM=$(cat package.json | jq '.engines.npm')
          METEOR=$(cat .meteor/release | awk -F'@' '{print $2}')

          echo ::set-output name=bundle::${BUNDLE}
          echo ::set-output name=node::${NODE}
          echo ::set-output name=npm::${NPM}
          echo ::set-output name=meteor::${METEOR}

      - name: "Show versions"
        run: |
          echo "bundle version is: ${{ steps.versions.outputs.bundle }}"
          echo "node version is: ${{ steps.versions.outputs.node }}"
          echo "npm version is: ${{ steps.versions.outputs.npm }}"
          echo "meteor version is: ${{ steps.versions.outputs.meteor }}"

      - uses: meteorengineer/setup-meteor@v1
        with:
          meteor-release: ${{ steps.versions.outputs.meteor }}

      - run: meteor npm install
      - run: meteor build ../

      # - name: Rename bundle file
      #   run: |
      #     mv ../${{ github.event.repository.name }}.tar.gz ${{ env.METEOR_BUNDLE }}
      #   shell: bash

      - name: Upload Artifacts
        uses: actions/upload-artifact@v3
        with:
          name: artifacts
          path: |
            ../${{ github.event.repository.name }}.tar.gz
            .dockerignore
            Dockerfile
            docker-compose.yaml
            .env.mongo.template
            .env.recorder.template
            meteor-recorder.service
            README.md
            LICENSE
          if-no-files-found: error
