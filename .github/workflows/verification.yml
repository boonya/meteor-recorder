name: "Verification üëÆüèΩ‚Äç‚ôÇÔ∏è"

on:
  push:
    tags-ignore: ["*"]
    paths-ignore: ["**.md", "LICENSE"]
    branches: [main]
  pull_request:
    paths-ignore: ["**.md", "LICENSE"]

jobs:
  versions:
    name: Verify versions
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v3

      - name: Define versions
        id: versions
        run: |
          BUNDLE=$(cat package.json | jq -r '.version')
          METEOR=$(cat .meteor/release | awk -F'@' '{print $2}')
          NVMRC=$(cat .nvmrc)
          NODE=$(cat package.json | jq -r '.engines.node')
          NPM=$(cat package.json | jq -r '.engines.npm')

          echo ::set-output name=bundle::${BUNDLE}
          echo ::set-output name=meteor::${METEOR}
          echo ::set-output name=nvmrc::${NVMRC}
          echo ::set-output name=node::${NODE}
          echo ::set-output name=npm::${NPM}

          echo "bundle version is: ${BUNDLE}"
          echo "meteor version is: ${METEOR}"
          echo ".nvmrc version is: ${NVMRC}"
          echo "node version is: ${NODE}"
          echo "npm version is: ${NPM}"

      - name: Verify required node version
        run: |
          if [ ${{ steps.versions.outputs.nvmrc }} != ${{ steps.versions.outputs.node }} ]
          then
            echo "Node version different in .nvmrc file and package.json"
            exit 1
          fi

  lint:
    name: Linting üîé
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version-file: ".nvmrc"
      - run: npm ci
      - run: npm run lint

  test:
    name: Testing üß™
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v3
      - name: Define meteor version
        id: versions
        run: |
          METEOR=$(cat .meteor/release | awk -F'@' '{print $2}')
          echo ::set-output name=meteor::${METEOR}
      - uses: meteorengineer/setup-meteor@v1
        with:
          meteor-release: "${{ steps.versions.outputs.meteor }}"
      - run: meteor npm install
      - run: npm run test
